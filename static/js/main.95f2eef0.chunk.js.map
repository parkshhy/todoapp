{"version":3,"sources":["components/Template.js","components/TodoItem.js","components/TodoList.js","components/TodoInsert.js","App.js","reportWebVitals.js","index.js"],"names":["Template","children","todoLength","className","TodoItem","todo","onCheckToggle","onInsertToggle","onChangeSelectedTodo","id","text","checked","onClick","TodoList","todos","map","TodoInsert","onInsertTodo","selectedTodo","onRemove","onUpdate","useState","value","setValue","useEffect","onSubmit","e","preventDefault","placeholder","onChange","target","type","nextId","App","setSelectedTodo","insertToggle","setInsertToggle","setTodos","prev","length","alert","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95f2eef0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Template.css\";\n\nconst Template = ({ children, todoLength }) => {\n  return (\n    <div className=\"Template\">\n      <div className=\"title\">오늘의 할 일 ({todoLength})</div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nexport default Template;\n","import React from \"react\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank } from \"react-icons/md\";\nimport \"./TodoItem.css\";\n\nconst TodoItem = ({\n  todo,\n  onCheckToggle,\n  onInsertToggle,\n  onChangeSelectedTodo\n}) => {\n  const { id, text, checked } = todo;\n  return (\n    <div className=\"TodoItem\">\n      <div className={`content ${checked ? \"checked\" : \"\"}`}>\n        {checked ? (\n          <MdCheckBox\n            onClick={() => {\n              onCheckToggle(id);\n            }}\n          />\n        ) : (\n          <MdCheckBoxOutlineBlank\n            onClick={() => {\n              onCheckToggle(id);\n            }}\n          />\n        )}\n        <div\n          className=\"text\"\n          onClick={() => {\n            onChangeSelectedTodo(todo);\n            onInsertToggle();\n          }}\n        >\n          {text}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport \"./TodoList.css\";\n\nconst TodoList = ({\n  todos,\n  onCheckToggle,\n  onInsertToggle,\n  onChangeSelectedTodo\n}) => {\n  return (\n    <div className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          onCheckToggle={onCheckToggle}\n          onInsertToggle={onInsertToggle}\n          onChangeSelectedTodo={onChangeSelectedTodo}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { TiTrash, TiPencil } from \"react-icons/ti\";\nimport \"./TodoInsert.css\";\n\nconst TodoInsert = ({\n  onInsertToggle,\n  onInsertTodo,\n  selectedTodo,\n  onRemove,\n  onUpdate\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    onInsertTodo(value);\n    setValue(\"\");\n    onInsertToggle();\n  };\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setValue(selectedTodo.text);\n    }\n  }, [selectedTodo]);\n  return (\n    <div>\n      <div className=\"background\" onClick={onInsertToggle}></div>\n      <form\n        onSubmit={\n          selectedTodo\n            ? () => {\n                onUpdate(selectedTodo.id, value);\n              }\n            : onSubmit\n        }\n      >\n        <input\n          placeholder=\"please type\"\n          value={value}\n          onChange={onChange}\n        ></input>\n        {selectedTodo ? (\n          <div className=\"rewrite\">\n            <TiPencil\n              onClick={() => {\n                onUpdate(selectedTodo.id, value);\n              }}\n            />\n            <TiTrash\n              onClick={() => {\n                onRemove(selectedTodo.id);\n              }}\n            />\n          </div>\n        ) : (\n          <button type=\"submit\">\n            <MdAddCircle />\n          </button>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default TodoInsert;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Template from \"./components/Template\";\nimport TodoList from \"./components/TodoList\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport TodoInsert from \"./components/TodoInsert\";\n\nlet nextId = 4;\n\nconst App = () => {\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"할일 1\",\n      checked: true\n    },\n    {\n      id: 2,\n      text: \"할일 2\",\n      checked: false\n    },\n    {\n      id: 3,\n      text: \"할일 3\",\n      checked: true\n    }\n  ]);\n\n  const onInsertToggle = () => {\n    if (selectedTodo) {\n      setSelectedTodo(null);\n    }\n    setInsertToggle(prev => !prev);\n  };\n\n  const onInsertTodo = text => {\n    if (text === \"\") {\n      return alert(\"텍스트를 입력하시오\");\n    } else {\n      const todo = {\n        id: nextId,\n        text,\n        checked: false\n      };\n      setTodos(todos => todos.concat(todo));\n      nextId++;\n    }\n  };\n\n  const onCheckToggle = id => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  };\n\n  const onChangeSelectedTodo = todo => {\n    setSelectedTodo(todo);\n  };\n\n  const onRemove = id => {\n    onInsertToggle();\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n\n  const onUpdate = (id, text) => {\n    onInsertToggle();\n    setTodos(todos =>\n      todos.map(todo => (todo.id === id ? { ...todo, text } : todo))\n    );\n  };\n\n  return (\n    <Template todoLength={todos.length} >\n      <TodoList\n        todos={todos}\n        onCheckToggle={onCheckToggle}\n        onInsertToggle={onInsertToggle}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n      />\n      <div className=\"add-todo-button\" onClick={onInsertToggle}>\n        <MdAddCircle />\n      </div>\n      {insertToggle && (\n        <TodoInsert\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onInsertTodo={onInsertTodo}\n          onRemove={onRemove}\n          onUpdate={onUpdate}\n        />\n      )}\n    </Template>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}